//
// Copyright (c) Maxeler Technologies Ltd.
// All rights reserved.
//

package poisson;

import poisson.lib.PoissonSolver;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEComplex;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEComplexType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;

public class PoissonKernel extends Kernel {
	static final DFEType type = dfeFloat(8, 24);

	public PoissonKernel(KernelParameters kp, PoissonParams params, int N) {
		super(kp);

		DFEComplexType complexType = new DFEComplexType(type);
		DFEVectorType<DFEComplex> vectorType = new DFEVectorType<DFEComplex>(complexType, 4);

		DFEVector<DFEComplex> in = io.input("poissonIn", vectorType);

		PoissonSolver poisson = new PoissonSolver(this, in, N);

		io.output("poissonOut", vectorType) <== poisson.getOutput();
	}


}
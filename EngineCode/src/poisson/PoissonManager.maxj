package poisson;

import com.maxeler.applibrary.fftapp.FftAppEngineParameters;
import com.maxeler.applibrary.fftapp.FftAppKernel;
import com.maxeler.applibrary.fftapp.IFftAppEngineParameters;
import com.maxeler.applibrary.fftapp.IFftAppKernel;
import com.maxeler.maxcompiler.v2.managers.BuildConfig;
import com.maxeler.maxcompiler.v2.managers.BuildConfig.Effort;
import com.maxeler.maxcompiler.v2.managers.custom.CustomManager;
import com.maxeler.maxcompiler.v2.managers.custom.blocks.KernelBlock;

public class PoissonManager extends CustomManager {

	/**
	 * Size in the first dimension. Has to be a power of 2 and at least 32.
	 */
	private static final int N = 32;

	public PoissonManager(PoissonParams params) {
		super(params);

		this.addMaxFileConstant("N", N);
	}

	public static void main(String[] args) {
		//Params
		FftAppEngineParameters params1 = new FftAppEngineParameters(args);
		PoissonParams params2 = new PoissonParams(args);
		IFftAppEngineParameters params3 = new IFftAppEngineParameters(args);

		//Manager
		PoissonManager manager = new PoissonManager(params2);

		// Kernels
		FftAppKernel kernel1 = new FftAppKernel(manager.makeKernelParameters("FftAppKernel"), params1, N, N, N);
		PoissonKernel kernel2 = new PoissonKernel(manager.makeKernelParameters("PoissonKernel"), params2, N);
		IFftAppKernel kernel3 = new IFftAppKernel(manager.makeKernelParameters("IFftAppKernel"), params3, N, N, N);

		KernelBlock kb1 = manager.addKernel(kernel1);
		KernelBlock kb2 = manager.addKernel(kernel2);
		KernelBlock kb3 = manager.addKernel(kernel3);

		kb1.getInput("fftIn") <== manager.addStreamFromCPU("poissonIn");
		kb2.getInput("poissonIn") <== kb1.getOutput("fftOut");
		kb3.getInput("fftIn") <== kb2.getOutput("poissonOut");
		manager.addStreamToCPU("poissonOut") <== kb3.getOutput("fftOut");

		BuildConfig buildConfig = manager.getBuildConfig();
		buildConfig.setBuildEffort(Effort.HIGH);
		buildConfig.setEnableTimingAnalysis(true);
		buildConfig.setMPPRCostTableSearchRange(params2.getMPPRStartCT(), params2.getMPPREndCT());
		buildConfig.setMPPRParallelism(params2.getMPPRThreads());
		buildConfig.setMPPRRetryNearMissesThreshold(params2.getMPPRRetryThreshold());

		manager.build();
	}
}
